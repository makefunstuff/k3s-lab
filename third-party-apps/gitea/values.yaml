gitea:
  ingress:
    enabled: true
    className: traefik
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
      traefik.ingress.kubernetes.io/router.tls.certresolver: "default"
      traefik.ingress.kubernetes.io/redirect-entry-point: https
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: git.topkek.cloud
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: gitea-tls
        hosts:
     ## @param service.ssh.type Kubernetes service type for ssh traffic
    ## @param service.ssh.port Port number for ssh traffic
    ## @param service.ssh.clusterIP ClusterIP setting for ssh autosetup for deployment is None
    ## @param service.ssh.loadBalancerIP LoadBalancer IP setting
    ## @param service.ssh.nodePort NodePort for ssh service
    ## @param service.ssh.externalTrafficPolicy If `service.ssh.type` is `NodePort` or `LoadBalancer`, set this to `Local` to enable source IP preservation
    ## @param service.ssh.externalIPs External IPs for service
    ## @param service.ssh.ipFamilyPolicy SSH service dual-stack policy
    ## @param service.ssh.ipFamilies SSH service dual-stack familiy selection,for dual-stack parameters see official kubernetes [dual-stack concept documentation](https://kubernetes.io/docs/concepts/services-networking/dual-stack/).
    ## @param service.ssh.hostPort HostPort for ssh service
    ## @param service.ssh.loadBalancerSourceRanges Source range filter for ssh loadbalancer
    ## @param service.ssh.annotations SSH service annotations
    ## @param service.ssh.labels SSH service additional labels
    service:
      ssh:
        type: NodePort
        port: 22
        nodePort: 2222
        externalTrafficPolicy: local
        hostPort: 2222
